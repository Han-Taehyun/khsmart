.blind {
	position: absolute;
	clip: rect(0, 0, 0, 0);
	width: 1px;
	height: 1px;
	margin: -1px;
	overflow: hidden;
}

.input-btn-wrapper {
	display: flex;
}

.input-wrapper {
	position: relative;
	display: flex;
	width: 90%;
}

.add-cancel-btn {
	position: absolute;
	right: 0;
	top: 50%;
	transform: translateY(-50%);
	min-width: 30px;
	color: rgba(31, 181, 172, 1);
}

.add-cancel-btn:hover {
	cursor: pointer;
	color: rgba(118, 118, 118, 1.0);
}

.add-btn {
	margin-left: 10px;
}

.container {
	display: block;
	position: relative;
	padding-left: 35px;
	margin-bottom: 12px;
	cursor: pointer;
	font-size: 22px;
	-webkit-user-select: none;
	-moz-user-select: none;
	-ms-user-select: none;
	user-select: none;
	width: auto;
	border: 1px solid #999999; height : 100%;
	border-right: none;
	height: 100%;
	background: #f8f8f8;
}

/* Hide the browser's default checkbox */
.container input[type="checkbox"] {
	position: absolute;
	opacity: 0;
	cursor: pointer;
	height: 0;
	width: 0;
}

/* Create a custom checkbox */
.checkmark {
	position: absolute;
	top: 50%; left : 50%; transform : translate( -50%, -50%);
	height: 20px;
	width: 20px;
	border: 1px solid #999;
	left: 50%;
	transform: translate(-50%, -50%);
}

/* On mouse-over, add a grey background color */
.container:hover input ~ .checkmark {
	background-color: #ccc;
}

/* When the checkbox is checked, add a blue background */
.container input:checked ~ .checkmark {
	background-color: rgba(31, 181, 172, 1);
	border: none;
}

/* Create the checkmark/indicator (hidden when not checked) */
.checkmark:after {
	content: "";
	position: absolute;
	display: none;
}

/* Show the checkmark when checked */
.container input:checked ~ .checkmark:after {
	display: block;
}

/* Style the checkmark/indicator */
.container .checkmark:after {
	left: 7px;
	top: 2px;
	width: 7px;
	height: 12px;
	border: solid white;
	border-width: 0px 3px 3px 0;
	-webkit-transform: rotate(45deg);
	-ms-transform: rotate(45deg);
	transform: rotate(45deg);
}

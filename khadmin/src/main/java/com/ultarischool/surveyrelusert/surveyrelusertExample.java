package com.ultarischool.surveyrelusert;

import java.util.ArrayList;
import java.util.List;

import edumgt.common.util.PageVO;

public class surveyrelusertExample extends  PageVO{
    /**
     * This field was generated by MyBatis Generator.
     * This field corresponds to the database table surveyreluscl
     *
     * @mbg.generated Tue Dec 17 11:09:48 KST 2019
     */
    protected String orderByClause;

    /**
     * This field was generated by MyBatis Generator.
     * This field corresponds to the database table surveyreluscl
     *
     * @mbg.generated Tue Dec 17 11:09:48 KST 2019
     */
    protected boolean distinct;

    /**
     * This field was generated by MyBatis Generator.
     * This field corresponds to the database table surveyreluscl
     *
     * @mbg.generated Tue Dec 17 11:09:48 KST 2019
     */
    protected List<Criteria> oredCriteria;

    /**
     * This method was generated by MyBatis Generator.
     * This method corresponds to the database table surveyreluscl
     *
     * @mbg.generated Tue Dec 17 11:09:48 KST 2019
     */
    public surveyrelusertExample() {
        oredCriteria = new ArrayList<Criteria>();
    }

    /**
     * This method was generated by MyBatis Generator.
     * This method corresponds to the database table surveyreluscl
     *
     * @mbg.generated Tue Dec 17 11:09:48 KST 2019
     */
    public void setOrderByClause(String orderByClause) {
        this.orderByClause = orderByClause;
    }

    /**
     * This method was generated by MyBatis Generator.
     * This method corresponds to the database table surveyreluscl
     *
     * @mbg.generated Tue Dec 17 11:09:48 KST 2019
     */
    public String getOrderByClause() {
        return orderByClause;
    }

    /**
     * This method was generated by MyBatis Generator.
     * This method corresponds to the database table surveyreluscl
     *
     * @mbg.generated Tue Dec 17 11:09:48 KST 2019
     */
    public void setDistinct(boolean distinct) {
        this.distinct = distinct;
    }

    /**
     * This method was generated by MyBatis Generator.
     * This method corresponds to the database table surveyreluscl
     *
     * @mbg.generated Tue Dec 17 11:09:48 KST 2019
     */
    public boolean isDistinct() {
        return distinct;
    }

    /**
     * This method was generated by MyBatis Generator.
     * This method corresponds to the database table surveyreluscl
     *
     * @mbg.generated Tue Dec 17 11:09:48 KST 2019
     */
    public List<Criteria> getOredCriteria() {
        return oredCriteria;
    }

    /**
     * This method was generated by MyBatis Generator.
     * This method corresponds to the database table surveyreluscl
     *
     * @mbg.generated Tue Dec 17 11:09:48 KST 2019
     */
    public void or(Criteria criteria) {
        oredCriteria.add(criteria);
    }

    /**
     * This method was generated by MyBatis Generator.
     * This method corresponds to the database table surveyreluscl
     *
     * @mbg.generated Tue Dec 17 11:09:48 KST 2019
     */
    public Criteria or() {
        Criteria criteria = createCriteriaInternal();
        oredCriteria.add(criteria);
        return criteria;
    }

    /**
     * This method was generated by MyBatis Generator.
     * This method corresponds to the database table surveyreluscl
     *
     * @mbg.generated Tue Dec 17 11:09:48 KST 2019
     */
    public Criteria createCriteria() {
        Criteria criteria = createCriteriaInternal();
        if (oredCriteria.size() == 0) {
            oredCriteria.add(criteria);
        }
        return criteria;
    }

    /**
     * This method was generated by MyBatis Generator.
     * This method corresponds to the database table surveyreluscl
     *
     * @mbg.generated Tue Dec 17 11:09:48 KST 2019
     */
    protected Criteria createCriteriaInternal() {
        Criteria criteria = new Criteria();
        return criteria;
    }

    /**
     * This method was generated by MyBatis Generator.
     * This method corresponds to the database table surveyreluscl
     *
     * @mbg.generated Tue Dec 17 11:09:48 KST 2019
     */
    public void clear() {
        oredCriteria.clear();
        orderByClause = null;
        distinct = false;
    }

    /**
     * This class was generated by MyBatis Generator.
     * This class corresponds to the database table surveyreluscl
     *
     * @mbg.generated Tue Dec 17 11:09:48 KST 2019
     */
    protected abstract static class GeneratedCriteria {
        protected List<Criterion> criteria;

        protected GeneratedCriteria() {
            super();
            criteria = new ArrayList<Criterion>();
        }

        public boolean isValid() {
            return criteria.size() > 0;
        }

        public List<Criterion> getAllCriteria() {
            return criteria;
        }

        public List<Criterion> getCriteria() {
            return criteria;
        }

        protected void addCriterion(String condition) {
            if (condition == null) {
                throw new RuntimeException("Value for condition cannot be null");
            }
            criteria.add(new Criterion(condition));
        }

        protected void addCriterion(String condition, Object value, String property) {
            if (value == null) {
                throw new RuntimeException("Value for " + property + " cannot be null");
            }
            criteria.add(new Criterion(condition, value));
        }

        protected void addCriterion(String condition, Object value1, Object value2, String property) {
            if (value1 == null || value2 == null) {
                throw new RuntimeException("Between values for " + property + " cannot be null");
            }
            criteria.add(new Criterion(condition, value1, value2));
        }

        public Criteria andSnIsNull() {
            addCriterion("sn is null");
            return (Criteria) this;
        }

        public Criteria andSnIsNotNull() {
            addCriterion("sn is not null");
            return (Criteria) this;
        }

        public Criteria andSnEqualTo(Integer value) {
            addCriterion("sn =", value, "sn");
            return (Criteria) this;
        }

        public Criteria andSnNotEqualTo(Integer value) {
            addCriterion("sn <>", value, "sn");
            return (Criteria) this;
        }

        public Criteria andSnGreaterThan(Integer value) {
            addCriterion("sn >", value, "sn");
            return (Criteria) this;
        }

        public Criteria andSnGreaterThanOrEqualTo(Integer value) {
            addCriterion("sn >=", value, "sn");
            return (Criteria) this;
        }

        public Criteria andSnLessThan(Integer value) {
            addCriterion("sn <", value, "sn");
            return (Criteria) this;
        }

        public Criteria andSnLessThanOrEqualTo(Integer value) {
            addCriterion("sn <=", value, "sn");
            return (Criteria) this;
        }

        public Criteria andSnIn(List<Integer> values) {
            addCriterion("sn in", values, "sn");
            return (Criteria) this;
        }

        public Criteria andSnNotIn(List<Integer> values) {
            addCriterion("sn not in", values, "sn");
            return (Criteria) this;
        }

        public Criteria andSnBetween(Integer value1, Integer value2) {
            addCriterion("sn between", value1, value2, "sn");
            return (Criteria) this;
        }

        public Criteria andSnNotBetween(Integer value1, Integer value2) {
            addCriterion("sn not between", value1, value2, "sn");
            return (Criteria) this;
        }

        public Criteria andClassnofkIsNull() {
            addCriterion("classnofk is null");
            return (Criteria) this;
        }

        public Criteria andClassnofkIsNotNull() {
            addCriterion("classnofk is not null");
            return (Criteria) this;
        }

        public Criteria andClassnofkEqualTo(Integer value) {
            addCriterion("classnofk =", value, "classnofk");
            return (Criteria) this;
        }

        public Criteria andClassnofkNotEqualTo(Integer value) {
            addCriterion("classnofk <>", value, "classnofk");
            return (Criteria) this;
        }

        public Criteria andClassnofkGreaterThan(Integer value) {
            addCriterion("classnofk >", value, "classnofk");
            return (Criteria) this;
        }

        public Criteria andClassnofkGreaterThanOrEqualTo(Integer value) {
            addCriterion("classnofk >=", value, "classnofk");
            return (Criteria) this;
        }

        public Criteria andClassnofkLessThan(Integer value) {
            addCriterion("classnofk <", value, "classnofk");
            return (Criteria) this;
        }

        public Criteria andClassnofkLessThanOrEqualTo(Integer value) {
            addCriterion("classnofk <=", value, "classnofk");
            return (Criteria) this;
        }

        public Criteria andClassnofkIn(List<Integer> values) {
            addCriterion("classnofk in", values, "classnofk");
            return (Criteria) this;
        }

        public Criteria andClassnofkNotIn(List<Integer> values) {
            addCriterion("classnofk not in", values, "classnofk");
            return (Criteria) this;
        }

        public Criteria andClassnofkBetween(Integer value1, Integer value2) {
            addCriterion("classnofk between", value1, value2, "classnofk");
            return (Criteria) this;
        }

        public Criteria andClassnofkNotBetween(Integer value1, Integer value2) {
            addCriterion("classnofk not between", value1, value2, "classnofk");
            return (Criteria) this;
        }

        public Criteria andUseridfkIsNull() {
            addCriterion("useridfk is null");
            return (Criteria) this;
        }

        public Criteria andUseridfkIsNotNull() {
            addCriterion("useridfk is not null");
            return (Criteria) this;
        }

        public Criteria andUseridfkEqualTo(String value) {
            addCriterion("useridfk =", value, "useridfk");
            return (Criteria) this;
        }

        public Criteria andUseridfkNotEqualTo(String value) {
            addCriterion("useridfk <>", value, "useridfk");
            return (Criteria) this;
        }

        public Criteria andUseridfkGreaterThan(String value) {
            addCriterion("useridfk >", value, "useridfk");
            return (Criteria) this;
        }

        public Criteria andUseridfkGreaterThanOrEqualTo(String value) {
            addCriterion("useridfk >=", value, "useridfk");
            return (Criteria) this;
        }

        public Criteria andUseridfkLessThan(String value) {
            addCriterion("useridfk <", value, "useridfk");
            return (Criteria) this;
        }

        public Criteria andUseridfkLessThanOrEqualTo(String value) {
            addCriterion("useridfk <=", value, "useridfk");
            return (Criteria) this;
        }

        public Criteria andUseridfkLike(String value) {
            addCriterion("useridfk like", value, "useridfk");
            return (Criteria) this;
        }

        public Criteria andUseridfkNotLike(String value) {
            addCriterion("useridfk not like", value, "useridfk");
            return (Criteria) this;
        }

        public Criteria andUseridfkIn(List<String> values) {
            addCriterion("useridfk in", values, "useridfk");
            return (Criteria) this;
        }

        public Criteria andUseridfkNotIn(List<String> values) {
            addCriterion("useridfk not in", values, "useridfk");
            return (Criteria) this;
        }

        public Criteria andUseridfkBetween(String value1, String value2) {
            addCriterion("useridfk between", value1, value2, "useridfk");
            return (Criteria) this;
        }

        public Criteria andUseridfkNotBetween(String value1, String value2) {
            addCriterion("useridfk not between", value1, value2, "useridfk");
            return (Criteria) this;
        }

        public Criteria andSurveyfkIsNull() {
            addCriterion("surveyfk is null");
            return (Criteria) this;
        }

        public Criteria andSurveyfkIsNotNull() {
            addCriterion("surveyfk is not null");
            return (Criteria) this;
        }

        public Criteria andSurveyfkEqualTo(Integer value) {
            addCriterion("surveyfk =", value, "surveyfk");
            return (Criteria) this;
        }

        public Criteria andSurveyfkNotEqualTo(Integer value) {
            addCriterion("surveyfk <>", value, "surveyfk");
            return (Criteria) this;
        }

        public Criteria andSurveyfkGreaterThan(Integer value) {
            addCriterion("surveyfk >", value, "surveyfk");
            return (Criteria) this;
        }

        public Criteria andSurveyfkGreaterThanOrEqualTo(Integer value) {
            addCriterion("surveyfk >=", value, "surveyfk");
            return (Criteria) this;
        }

        public Criteria andSurveyfkLessThan(Integer value) {
            addCriterion("surveyfk <", value, "surveyfk");
            return (Criteria) this;
        }

        public Criteria andSurveyfkLessThanOrEqualTo(Integer value) {
            addCriterion("surveyfk <=", value, "surveyfk");
            return (Criteria) this;
        }

        public Criteria andSurveyfkIn(List<Integer> values) {
            addCriterion("surveyfk in", values, "surveyfk");
            return (Criteria) this;
        }

        public Criteria andSurveyfkNotIn(List<Integer> values) {
            addCriterion("surveyfk not in", values, "surveyfk");
            return (Criteria) this;
        }

        public Criteria andSurveyfkBetween(Integer value1, Integer value2) {
            addCriterion("surveyfk between", value1, value2, "surveyfk");
            return (Criteria) this;
        }

        public Criteria andSurveyfkNotBetween(Integer value1, Integer value2) {
            addCriterion("surveyfk not between", value1, value2, "surveyfk");
            return (Criteria) this;
        }
    }

    /**
     * This class was generated by MyBatis Generator.
     * This class corresponds to the database table surveyreluscl
     *
     * @mbg.generated do_not_delete_during_merge Tue Dec 17 11:09:48 KST 2019
     */
    public static class Criteria extends GeneratedCriteria {

        protected Criteria() {
            super();
        }
    }

    /**
     * This class was generated by MyBatis Generator.
     * This class corresponds to the database table surveyreluscl
     *
     * @mbg.generated Tue Dec 17 11:09:48 KST 2019
     */
    public static class Criterion {
        private String condition;

        private Object value;

        private Object secondValue;

        private boolean noValue;

        private boolean singleValue;

        private boolean betweenValue;

        private boolean listValue;

        private String typeHandler;

        public String getCondition() {
            return condition;
        }

        public Object getValue() {
            return value;
        }

        public Object getSecondValue() {
            return secondValue;
        }

        public boolean isNoValue() {
            return noValue;
        }

        public boolean isSingleValue() {
            return singleValue;
        }

        public boolean isBetweenValue() {
            return betweenValue;
        }

        public boolean isListValue() {
            return listValue;
        }

        public String getTypeHandler() {
            return typeHandler;
        }

        protected Criterion(String condition) {
            super();
            this.condition = condition;
            this.typeHandler = null;
            this.noValue = true;
        }

        protected Criterion(String condition, Object value, String typeHandler) {
            super();
            this.condition = condition;
            this.value = value;
            this.typeHandler = typeHandler;
            if (value instanceof List<?>) {
                this.listValue = true;
            } else {
                this.singleValue = true;
            }
        }

        protected Criterion(String condition, Object value) {
            this(condition, value, null);
        }

        protected Criterion(String condition, Object value, Object secondValue, String typeHandler) {
            super();
            this.condition = condition;
            this.value = value;
            this.secondValue = secondValue;
            this.typeHandler = typeHandler;
            this.betweenValue = true;
        }

        protected Criterion(String condition, Object value, Object secondValue) {
            this(condition, value, secondValue, null);
        }
    }
}